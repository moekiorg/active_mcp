class <%= class_name %> < ActiveMcp::Resource::Base
  class << self
    def mime_type
      "application/json"
    end
  end

  def resource_name
    "<%= file_name %>"
  end

  def uri
    "data://localhost/<%= file_name %>"
  end
  
  def description
    "<%= file_name.humanize %>"
  end

  # Uncomment and modify this method to implement authorization control
  # This controls who can see and use this tool
  # def visible?(context: {})
  #   # Example: require authentication
  #   # return false unless context
  #   
  #   # Example: require a specific authentication type
  #   # return false unless context[:auth_info][:type] == :bearer
  #   
  #   # Example: check for admin permissions
  #   # admin_tokens = ["admin-token"]
  #   # return admin_tokens.include?(context[:auth_info][:token])
  #   
  #   # Default: allow all access
  #   true
  # end
  
  def text
    # Return a string, hash, or any JSON-serializable object
    { foo: "bar" }
  end

  # def blob
  #   File.read("/path/to/file")
  # end
end
